{"version":3,"sources":["Components/FormResolver.js","Components/Feedbackform.jsx","Components/DisplayTable.jsx","Components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactSchema","Joi","name","regex","min","max","required","error","errors","forEach","err","console","log","code","message","userfeedback","optionValue","email","minDomainSegments","tlds","allow","ContactRsolver","joiResolver","Feedbackform","useForm","resolver","register","handleSubmit","reset","formState","inputEl","useRef","useState","getnum","setnum","getmsg","setmsg","onSubmit","data","a","alert","rawPhone","body","feedback","optionvalue","number","array","JSON","parse","localStorage","getItem","push","setItem","stringify","className","style","height","placeholder","type","ref","inputClass","country","autoFormat","searchClass","searchStyle","margin","width","enableSearchField","countryCodeEditable","onChange","value","replace","slice","dialCode","length","disableSearchIcon","enableSearch","color","fontSize","class","id","for","DisplayTable","getList","setList","useEffect","aValue","storedata","scope","map","item","Header","GetDisplay","setDisplay","isActiveclass","setActiveclass","isActiveclass2","setActiveclass2","background","paddingTop","boxShadow","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.614219d2.chunk.js","sourcesContent":["import * as Joi from \"joi\";\r\nimport { joiResolver } from \"@hookform/resolvers/joi\";\r\n\r\nconst ContactSchema = Joi.object({\r\n  name: Joi.string()\r\n    .regex(/^[a-zA-Z ]*$/)\r\n    .min(3)\r\n    .max(30)\r\n    .required()\r\n    // .regex(/^[A-Za-z]+$/i)\r\n    // .pattern(RegExp(\"/^[A-Za-z]+$/i\"))\r\n\r\n    .error((errors) => {\r\n      errors.forEach((err) => {\r\n        console.log(\"error\", errors);\r\n\r\n        if (err.code === \"string.empty\") {\r\n          err.message = \"First name is required field\";\r\n        } else if (err.code === \"string.pattern.base\") {\r\n          err.message = \"Please Enter a valid  Name\";\r\n        }\r\n      });\r\n      return errors;\r\n    }),\r\n  userfeedback: Joi.string()\r\n    .regex(/^[a-zA-Z ]*$/)\r\n    .min(3)\r\n    .max(30)\r\n    .required()\r\n\r\n    .error((errors) => {\r\n      errors.forEach((err) => {\r\n        console.log(\"error\", errors);\r\n\r\n        if (err.code === \"string.empty\") {\r\n          err.message = \"User feedback  is required field\";\r\n        } else if (err.code === \"string.pattern.base\") {\r\n          err.message = \"Please Enter a valid  userfeedback\";\r\n        }\r\n      });\r\n      return errors;\r\n    }),\r\n\r\n  optionValue: Joi.string()\r\n    .required()\r\n    .error((errors) => {\r\n      errors.forEach((err) => {\r\n        console.log(\"error\", errors);\r\n\r\n        if (err.code === \"string.empty\") {\r\n          err.message = \" optionValue is required field\";\r\n        } else if (err.code === \"string.pattern.base\") {\r\n          err.message = \"Please Enter a valid  optionValue\";\r\n        }\r\n      });\r\n      return errors;\r\n    }),\r\n  email: Joi.string()\r\n\r\n    .min(3)\r\n    .max(30)\r\n    .email({\r\n      minDomainSegments: 2,\r\n      tlds: { allow: [\"com\", \"net\", \"in\", \"co\"] },\r\n    })\r\n    .error((errors) => {\r\n      errors.forEach((err) => {\r\n        if (err.code === \"string.empty\") {\r\n          err.message = \"Email is required field\";\r\n        } else if (err.code === \"string.email\") {\r\n          err.message = \"Please Enter a valid Email\";\r\n        }\r\n      });\r\n      return errors;\r\n    }),\r\n});\r\n\r\nexport const ContactRsolver = joiResolver(ContactSchema);\r\n","import React, { useState, useRef } from \"react\";\r\nimport { ContactRsolver } from \"./FormResolver\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Feedbackform.css\";\r\nexport default function Feedbackform() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({ resolver: ContactRsolver });\r\n  const inputEl = useRef(null);\r\n  const [getnum, setnum] = useState(0);\r\n  const [getmsg, setmsg] = useState(\"\");\r\n  const onSubmit = async (data) => {\r\n    if (getnum === 0) {\r\n      setmsg(\"Number name is required field\");\r\n      alert(\"required\");\r\n    } else if (getnum.rawPhone === /^[0-9\\b]+$/) {\r\n      alert(\" not ok\");\r\n      setmsg(\"Please Enter a valid  Number\");\r\n    }\r\n    // else {\r\n    //   setmsg(\"\");\r\n    //   alert(\"ok\");\r\n    // }\r\n    let body = {\r\n      name: data.name,\r\n      feedback: data.userfeedback,\r\n      email: data.email,\r\n      optionvalue: data.optionValue,\r\n      number: getnum.rawPhone,\r\n    };\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"Data\") || \"[]\");\r\n    array.push(body);\r\n    localStorage.setItem(\"Data\", JSON.stringify(array));\r\n\r\n    console.log(JSON.stringify(body));\r\n    alert(\"Thank you for completing the information \");\r\n    setnum(0);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid m-0 p-0 bgcolor\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h2 className=\"form_heading\">Aromatic Bar</h2>\r\n            <p className=\"form_para\">\r\n              We are committed to providing you with the best dining experience\r\n              possible, so we welcome your comments. Please fill out this\r\n              questionnaire. Thank you\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"row form_container\">\r\n          <div className=\"form-group   col-md-6\" style={{ height: \"90px\" }}>\r\n            <label>Feedback</label>\r\n            <input\r\n              placeholder=\"User Feedback\"\r\n              name=\"userfeedback\"\r\n              type=\"text\"\r\n              {...register(\"userfeedback\")}\r\n              className={`form-control ${\r\n                errors.userfeedback ? \"is-invalid\" : \"\"\r\n              }`}\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              {errors.userfeedback?.message}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group  col-md-6\" style={{ height: \"70px\" }}>\r\n            <label>Email</label>\r\n\r\n            <input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              {...register(\"email\")}\r\n              className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\r\n            />\r\n            <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n          </div>\r\n          <div className=\"form-group  col-md-6\" style={{ height: \"60px\" }}>\r\n            <label>Phone No</label>\r\n\r\n            <PhoneInput\r\n              ref={inputEl}\r\n              inputClass=\"w-100\"\r\n              // style={{ width: \"50px\" }}\r\n              country=\"in\"\r\n              name=\"Number\"\r\n              autoFormat\r\n              placeholder=\"enter No\"\r\n              // inputStyle={{ width: \"400px\" }}\r\n              // containerStyle={{ marginTop: \"15px\" }}\r\n              searchClass=\"search-class\"\r\n              searchStyle={{\r\n                margin: \"0\",\r\n                width: \"97%\",\r\n                height: \"30px\",\r\n              }}\r\n              className=\"phninput\"\r\n              enableSearchField\r\n              countryCodeEditable={false}\r\n              onChange={(value, country, data) => {\r\n                let rawPhone = value\r\n                  .replace(/[^0-9]+/g, \"\")\r\n                  .slice(country.dialCode.length);\r\n                // console.log(\r\n                //   \"aa\",\r\n                //   {\r\n                //     rawPhone: value\r\n                //       .replace(/[^0-9]+/g, \"\")\r\n                //       .slice(country.dialCode.length),\r\n                //   },\r\n                //   country\r\n                // );\r\n\r\n                setnum({ rawPhone });\r\n              }}\r\n              // style={{ width: \"100rem\" }}\r\n              disableSearchIcon\r\n              enableSearch\r\n            />\r\n            <span style={{ color: \"red\", fontSize: \"12px\" }}>\r\n              <p>{getmsg}</p>\r\n            </span>\r\n          </div>\r\n          <div className=\"form-group  col-md-6\" style={{ height: \"50px\" }}>\r\n            <label>Radio button</label>\r\n            <br />\r\n\r\n            <div class=\"form-check form-check-inline\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"inlineRadio1\"\r\n                value=\"Excellent\"\r\n                {...register(\"optionValue\", { required: true })}\r\n              />\r\n              <label class=\"form-check-label\" for=\"inlineRadio1\">\r\n                Excellent{\" \"}\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                {...register(\"optionValue\", { required: true })}\r\n                id=\"inlineRadio2\"\r\n                value=\"Good\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"inlineRadio2\">\r\n                Good\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                {...register(\"optionValue\", { required: true })}\r\n                id=\"inlineRadio3\"\r\n                value=\"Fair\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"inlineRadio3\">\r\n                Fair\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline\">\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                {...register(\"optionValue\", { required: true })}\r\n                id=\"inlineRadio4\"\r\n                value=\"Bad\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"inlineRadio4\">\r\n                Bad\r\n              </label>\r\n            </div>\r\n            <div className=\"invalid-feedback\">\r\n              {errors.optionValue?.message}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group col-6\">\r\n            <label>Name</label>\r\n\r\n            <input\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              {...register(\"name\")}\r\n              className={`form-control ${errors.name ? \"is-invalid\" : \"\"}`}\r\n            />\r\n            <div className=\"invalid-feedback\">{errors.name?.message}</div>\r\n          </div>\r\n\r\n          <div className=\"form-group col-12\">\r\n            <button type=\"submit\" className=\"btn submit_btn\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function DisplayTable() {\r\n  const [getList, setList] = useState([]);\r\n  useEffect(() => {\r\n    var aValue = localStorage.getItem(\"Data\");\r\n    var storedata = JSON.parse(aValue);\r\n    setList(storedata);\r\n    console.log(storedata);\r\n  }, []);\r\n  return (\r\n    <div className=\"bgcolor\">\r\n      <div className=\"container \">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h2 className=\"feedback_para\">All Feedback</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container table_container text-center\">\r\n        <table className=\"table \">\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <th scope=\"col\">Form Name</th>\r\n              <th scope=\"col\">Feedback</th>\r\n              <th scope=\"col\">Phone No</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Radio Option</th>\r\n              <th scope=\"col\">Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {getList ? (\r\n              <>\r\n                {\" \"}\r\n                {getList.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <tr>\r\n                        <td>Aromatic Bar</td>\r\n\r\n                        <td>{item.feedback}</td>\r\n                        <td>{item.number}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.optionvalue}</td>\r\n                        <td>{item.name}</td>\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                })}\r\n              </>\r\n            ) : (\r\n              <>Please give any feedback and Refresh </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Feedbackform from \"./Feedbackform\";\r\nimport DisplayTable from \"./DisplayTable\";\r\nexport default function Header() {\r\n  const [GetDisplay, setDisplay] = useState(<Feedbackform />);\r\n  const [isActiveclass, setActiveclass] = useState(true);\r\n  const [isActiveclass2, setActiveclass2] = useState(false);\r\n\r\n  const hadleChange = () => {\r\n    setActiveclass(true);\r\n    setActiveclass2(false);\r\n    setDisplay(<Feedbackform />);\r\n  };\r\n  const hadleChangetable = () => {\r\n    setActiveclass(false);\r\n    setActiveclass2(true);\r\n\r\n    setDisplay(<DisplayTable />);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid  pb-1\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col\"\r\n            style={{\r\n              background: \"white\",\r\n              paddingTop: \"1rem\",\r\n              boxShadow: \"0px 2px 2px #00000029\",\r\n            }}\r\n          >\r\n            <div className=\"btncontainer\">\r\n              <button\r\n                type=\"submit\"\r\n                className={isActiveclass ? \" btnselect\" : \"btnnonselect\"}\r\n                onClick={hadleChange}\r\n              >\r\n                Form\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className={isActiveclass2 ? \" btnselect\" : \"btnnonselect \"}\r\n                onClick={hadleChangetable}\r\n              >\r\n                Table\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {GetDisplay}\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nfunction App() {\n  return (\n    <>\n      {/* <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Header} />\n        </Switch>\n      </Router> */}\n      <Header />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}